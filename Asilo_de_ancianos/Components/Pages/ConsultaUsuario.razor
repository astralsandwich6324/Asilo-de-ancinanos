@page "/consulta"
@using Asilo_de_ancianos.Components.Models
@using Asilo_de_ancianos.Data
@using Microsoft.EntityFrameworkCore
@inject NavigationManager Navigation
@inject AppDbContext DbContext
@rendermode InteractiveServer

<h3 class="text-center mb-4 mt-5">Consulta de Usuario</h3>

<div class="container">
    <div class="row justify-content-center">
        <div class="col-md-6">
            <div class="card shadow-sm">
                <div class="card-body">
                    <div class="form-group mb-3">
                        <label for="nombre">Ingrese el Nombre del Usuario</label>
                        <InputText id="nombre" class="form-control" @bind-Value="nombre" />
                    </div>

                    <div class="form-group mb-3">
                        <label for="id">Ingrese el ID del Usuario</label>
                        <InputNumber id="id" class="form-control" @bind-Value="id" />
                    </div>

                    <button class="btn btn-primary btn-block" @onclick="ConsultarUsuario">Consultar</button>
                </div>
            </div>
        </div>
    </div>

    @if (usuario != null)
    {
        <div class="mt-4">
            <h4>Detalles del Usuario</h4>
            <div class="card">
                <div class="card-body">
                    <p><strong>ID:</strong> @usuario.Id</p>
                    <p><strong>Nombre:</strong> @usuario.Nombre</p>
                    <p><strong>Correo:</strong> @usuario.Correo</p>
                    <p><strong>Teléfono:</strong> @usuario.Telefono</p>
                    @if (!string.IsNullOrEmpty(usuario.Foto))
                    {
                        <img src="data:image/png;base64,@usuario.Foto" alt="Foto de Usuario" class="img-thumbnail" />
                    }
                    else
                    {
                        <p>No hay foto disponible.</p>
                    }
                </div>
            </div>
        </div>
    }
    else if (!string.IsNullOrEmpty(nombre) || id.HasValue)
    {
        <div class="alert alert-warning mt-3">No se encontraron resultados para los criterios de búsqueda.</div>
    }
</div>

@code {
    private string nombre;
    private int? id;
    private Usuario usuario;

    private async Task ConsultarUsuario()
    {
        var query = DbContext.CollecionUsuarios.AsQueryable();

        // Filtrado por Nombre
        if (!string.IsNullOrEmpty(nombre))
        {
            query = query.Where(u => u.Nombre.Contains(nombre));
        }

        // Filtrado por ID
        if (id.HasValue)
        {
            query = query.Where(u => u.Id == id.Value);
        }

        // Obtener el primer resultado que coincida
        usuario = await query.FirstOrDefaultAsync();
    }
}
